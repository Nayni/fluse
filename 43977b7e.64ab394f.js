(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{111:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return u})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),a=n(6),o=(n(0),n(124)),i={id:"fixture-name",title:"Fixture name",sidebar_label:"Fixture name"},u={id:"fixture-name",title:"Fixture name",description:"Every fixture you create with Fluse will always require you to pass in at least one argument during execution: name.",source:"@site/docs\\fixture-name.md",permalink:"/fluse/docs/fixture-name",editUrl:"https://github.com/Nayni/fluse/edit/master/website/docs/fixture-name.md",sidebar_label:"Fixture name",sidebar:"docs",previous:{title:"Introduction",permalink:"/fluse/docs/introduction"},next:{title:"Supplying arguments",permalink:"/fluse/docs/supplying-arguments"}},c=[],s={rightToc:c};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Every fixture you create with Fluse will always require you to pass in ",Object(o.b)("em",{parentName:"p"},"at least one")," argument during execution: ",Object(o.b)("strong",{parentName:"p"},"name"),"."),Object(o.b)("p",null,"The name argument is used by Fluse to return the data back to you once it has been created."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import { createExecutor, fixture } from "fluse";\n\nconst execute = createExecutor();\n\nconst fooFixture = fixture({\n  async create() {\n    return new Foo();\n  },\n});\n\nconst { foo } = await execute(fooFixture("foo"));\nconst { bar } = await execute(fooFixture({ name: "bar" }));\n')),Object(o.b)("p",null,"As shown in the example above we define a fixture for ",Object(o.b)("inlineCode",{parentName:"p"},"Foo"),". We can execute this fixture multiple times, each execution however requires us to pass a name to identify the data set we just created. The name that we pick will be returned back to us as a named result."),Object(o.b)("p",null,"When you are just working with a single data fixture this might sound like a bit of overhead. However Fluse doesn't restrict itself to just a single fixture. The name argument becomes very important when you start to ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/fluse/docs/combining-fixtures"}),"combine fixtures"),"."))}l.isMDXComponent=!0},124:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,b=p["".concat(i,".").concat(m)]||p[m]||f[m]||o;return n?a.a.createElement(b,u(u({ref:t},s),{},{components:n})):a.a.createElement(b,u({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);