(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return u})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),o=(n(0),n(123)),i={id:"supplying-arguments",title:"Supplying arguments",sidebar_label:"Supplying arguments"},u={id:"supplying-arguments",title:"Supplying arguments",description:"Whenever you define a fixture you can optionally define arguments. By adding arguments to your fixture you can allow consumers to control parts of the output of the fixture.",source:"@site/docs\\supplying-arguments.md",permalink:"/fluse/docs/supplying-arguments",editUrl:"https://github.com/Nayni/fluse/edit/master/website/docs/supplying-arguments.md",sidebar_label:"Supplying arguments",sidebar:"docs",previous:{title:"Fixture name",permalink:"/fluse/docs/fixture-name"},next:{title:"Combining fixtures",permalink:"/fluse/docs/combining-fixtures"}},s=[],c={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Whenever you define a fixture you can optionally define arguments. By adding arguments to your fixture you can allow consumers to control parts of the output of the fixture."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import { fixture } from "fluse";\n\ntype UserFixtureArgs = {\n  username: string;\n};\n\nexport const userFixture = fixture({\n  async create(ctx, args: UserFixtureArgs) {\n    const user = new User({ username: args.username });\n    return user;\n  },\n});\n')),Object(o.b)("p",null,"In the example above we are allowing consumers to pass in a username for the created user. We do this by using the second argument of the ",Object(o.b)("inlineCode",{parentName:"p"},"create")," function. For type-safety we created a type for the arguments ",Object(o.b)("inlineCode",{parentName:"p"},"UserFixtureArgs"),"."),Object(o.b)("p",null,"Whenever the fixture is used now it will require additional arguments to be passed in."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'import { createExecutor } from "fluse";\n\nconst execute = createExecutor();\nconst result = await execute(userFixture("testUser", { username: "test" }));\n')),Object(o.b)("p",null,"Notice how we pass in a username, as defined by our ",Object(o.b)("inlineCode",{parentName:"p"},"UserFixtureArgs")," type. If you are working in TypeScript Fluse will provide you with type information and in this case even complain if you try to use the fixture without passing in a username."),Object(o.b)("p",null,"Supplying arguments can be very useful for controlling certain parts of a fixture, it is also a vital piece to enable you to ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/fluse/docs/combining-fixtures"}),"combine fixtures"),"."),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"While arguments can be very useful. We recommend to keep your arguments to a ",Object(o.b)("strong",{parentName:"p"},"minimum")," to not bloat your fixtures."))))}p.isMDXComponent=!0},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},l=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=p(n),b=r,f=l["".concat(i,".").concat(b)]||l[b]||m[b]||o;return n?a.a.createElement(f,u(u({ref:t},c),{},{components:n})):a.a.createElement(f,u({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var c=2;c<o;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);