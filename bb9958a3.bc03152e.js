(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{74:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),i=n(6),a=(n(0),n(83)),o={id:"combining-fixtures",title:"Combining fixtures",sidebar_label:"Combining fixtures"},s={unversionedId:"combining-fixtures",id:"combining-fixtures",isDocsHomePage:!1,title:"Combining fixtures",description:"While arguments and lists will get pretty far already. Fluse is designed to deal with more complex scenarios.",source:"@site/docs\\combining-fixtures.md",slug:"/combining-fixtures",permalink:"/fluse/docs/combining-fixtures",editUrl:"https://github.com/Nayni/fluse/edit/master/website/docs/combining-fixtures.md",version:"current",sidebar_label:"Combining fixtures",sidebar:"docs",previous:{title:"Lists",permalink:"/fluse/docs/making-lists"},next:{title:"fluse()",permalink:"/fluse/docs/api-fluse"}},c=[],u={rightToc:c};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"While ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/fluse/docs/supplying-arguments"}),"arguments")," and ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/fluse/docs/making-lists"}),"lists")," will get pretty far already. Fluse is designed to deal with more complex scenarios."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"combine")," method lets you do this in a declarative way."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),'it("should create a complex scenario", async () => {\n  const scenario = combine()\n    .and(userFixture("bob"))\n    .and(userFixture("alice"))\n    .and(({ bob }) =>\n      postFixture("bobsPosts", {\n        list: 5,\n        args: {\n          author: bob,\n          comments: commentFixture.asArg({\n            list: 3,\n            args: {\n              author: userFixture.asArg(),\n            },\n          }),\n        },\n      })\n    )\n    .and(({ alice }) =>\n      postFixture("alicesPosts", {\n        list: 5,\n        args: {\n          author: alice,\n          comments: commentFixture.asArg({\n            list: 3,\n            args: {\n              author: userFixture.asArg(),\n            },\n          }),\n        },\n      })\n    )\n    .toFixture();\n\n  const { bob, bobsPosts, alice, alicesPosts } = await execute(scenario);\n});\n')),Object(a.b)("p",null,"The above example shows how we create a complex scenario using just 3 fixture definitions: ",Object(a.b)("inlineCode",{parentName:"p"},"userFixture"),", ",Object(a.b)("inlineCode",{parentName:"p"},"postFixture")," and ",Object(a.b)("inlineCode",{parentName:"p"},"commentFixture"),"."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"combine")," builder is type-safe all the way through. You're able to use fixture data previously created in the chain and pass them as input to the next fixture making the possibilities almost endless."))}l.isMDXComponent=!0},83:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),l=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(o,".").concat(m)]||p[m]||b[m]||a;return n?i.a.createElement(f,s(s({ref:t},u),{},{components:n})):i.a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);